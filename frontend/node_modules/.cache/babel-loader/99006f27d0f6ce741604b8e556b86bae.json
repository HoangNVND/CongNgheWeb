{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productDetailsReducer, productListReducer, pro } from \"./Reducers/ProductReducers.js\";\nimport { cartReducers } from \"./Reducers/CartReducers.js\";\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./Reducers/userReducers.js\";\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./Reducers/OrderReducers.js\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productReviewCreate: productCreateReviewReducer,\n  cart: cartReducers,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []; //LOGIN\n\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null; //SHIPPING\n\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressFromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/nguyenhoang/Documents/WebCourses/PROJECTS/frontend/src/Redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","pro","cartReducers","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","reducer","productList","productDetails","productReviewCreate","productCreateReviewReducer","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","shippingAddressFromLocalStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,qBADF,EAEEC,kBAFF,EAGEC,GAHF,QAIO,+BAJP;AAKA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SACEC,kBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,wBAJF,QAKO,4BALP;AAMA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,6BALP;AAMA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC9BiB,EAAAA,WAAW,EAAEZ,kBADiB;AAE9Ba,EAAAA,cAAc,EAAEd,qBAFc;AAG9Be,EAAAA,mBAAmB,EAAEC,0BAHS;AAI9BC,EAAAA,IAAI,EAAEd,YAJwB;AAK9Be,EAAAA,SAAS,EAAEb,gBALmB;AAM9Bc,EAAAA,YAAY,EAAEb,mBANgB;AAO9Bc,EAAAA,WAAW,EAAEhB,kBAPiB;AAQ9BiB,EAAAA,iBAAiB,EAAEd,wBARW;AAS9Be,EAAAA,WAAW,EAAEd,kBATiB;AAU9Be,EAAAA,YAAY,EAAEd,mBAVgB;AAW9Be,EAAAA,QAAQ,EAAEb,eAXoB;AAY9Bc,EAAAA,WAAW,EAAEf;AAZiB,CAAD,CAA/B;AAeA,MAAMgB,yBAAyB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC9BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD8B,GAE9B,EAFJ,C,CAIA;;AACA,MAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD6B,GAE7B,IAFJ,C,CAIA;;AACA,MAAMI,+BAA+B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACpCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADoC,GAEpC,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBhB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,SAAS,EAAER,yBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBd,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAOA,MAAMM,UAAU,GAAG,CAACvC,KAAD,CAAnB;AAEA,MAAMwC,KAAK,GAAG3C,WAAW,CACvBiB,OADuB,EAEvBqB,YAFuB,EAGvBlC,mBAAmB,CAACF,eAAe,CAAC,GAAGwC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productDetailsReducer,\n  productListReducer,\n  pro\n} from \"./Reducers/ProductReducers.js\";\nimport { cartReducers } from \"./Reducers/CartReducers.js\";\nimport {\n  userDetailsReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n} from \"./Reducers/userReducers.js\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderListMyReducer,\n  orderPayReducer,\n} from \"./Reducers/OrderReducers.js\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productReviewCreate: productCreateReviewReducer,\n  cart: cartReducers,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n});\n\nconst cartItemsFromLocalStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\n//LOGIN\nconst userInfoFromLocalStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\n//SHIPPING\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressFromLocalStorage,\n  },\n  userLogin: { userInfo: userInfoFromLocalStorage },\n};\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}