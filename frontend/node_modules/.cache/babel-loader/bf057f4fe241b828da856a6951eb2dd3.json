{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\";\nimport { logOut } from \"./userActions\"; //PRODUCT LIST\n\nexport const listProduct = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \" \";\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PRODUCT_LIST_REQUEST\n      });\n      const {\n        data\n      } = await axios.get(\"/api/products\");\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n}; //SINGLE PRODUCT\n\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // PRODUCT REVIEW CREATE\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/products/${productId}/review`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logOut());\n    }\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/nguyenhoang/Documents/WebCourses/PROJECTS/frontend/src/Redux/Actions/ProductActions.js"],"names":["axios","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","logOut","listProduct","keyword","dispatch","type","data","get","payload","error","response","message","listProductDetails","id","createProductReview","productId","review","getState","userLogin","userInfo","config","headers","Authorization","token","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n} from \"../Constants/ProductConstants\";\nimport { logOut } from \"./userActions\";\n\n//PRODUCT LIST\nexport const listProduct =\n  (keyword = \" \") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n      const { data } = await axios.get(\"/api/products\");\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n//SINGLE PRODUCT\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/products/${id}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n// PRODUCT REVIEW CREATE\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      await axios.post(`/api/products/${productId}/review`, review, config);\n      dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === \"Not authorized, token failed\") {\n        dispatch(logOut());\n      }\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload: message,\n      });\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}