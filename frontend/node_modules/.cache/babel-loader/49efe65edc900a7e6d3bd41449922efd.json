{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, // ORDER_LIST_MY_FAIL,\n// ORDER_LIST_MY_REQUEST,\n// ORDER_LIST_MY_SUCCESS,\nORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../Constants/OrderConstants.js\";\nimport axios from \"axios\";\nimport { logOut } from \"./userActions\";\nimport { CART_CLEAR_ITEMS } from \"../Constants/CartConstants.js\"; // CREATE ORDER\n\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logOut());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n}; // ORDER DETAILS\n\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logOut());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; //ORDER PAY\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Có lỗi xảy ra\") {\n      dispatch(logOut());\n    }\n\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n}; // USER ORDERS\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logOut());\n    }\n\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/nguyenhoang/Documents/WebCourses/PROJECTS/frontend/src/Redux/Actions/OrderActions.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","axios","logOut","CART_CLEAR_ITEMS","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","message","response","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL"],"mappings":"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","sourcesContent":["import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  // ORDER_LIST_MY_FAIL,\n  // ORDER_LIST_MY_REQUEST,\n  // ORDER_LIST_MY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from \"../Constants/OrderConstants.js\";\nimport axios from \"axios\";\nimport { logOut } from \"./userActions\";\nimport { CART_CLEAR_ITEMS } from \"../Constants/CartConstants.js\";\n\n// CREATE ORDER\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders`, order, config);\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data });\n    dispatch({ type: CART_CLEAR_ITEMS, payload: data });\n\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logOut());\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n// ORDER DETAILS\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logOut());\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    });\n  }\n};\n//ORDER PAY\nexport const payOrder =\n  (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_PAY_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      );\n      dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === \"Có lỗi xảy ra\") {\n        dispatch(logOut());\n      }\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload: message,\n      });\n    }\n  };\n\n// USER ORDERS\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_MY_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/`, config);\n    dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logOut());\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}